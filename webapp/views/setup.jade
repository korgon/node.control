extends layout_minimal

block jscripts
	script(src="/javascripts/jquery-waiting.js")
	script(src="/socket.io/socket.io.js")
	script(src="/javascripts/jquery-ui-1.10.3.js")
	script.
		var firstload = 1;
		var curPage = 1, endPage = 4;

		// do stuff once document loads
		$(document).ready(function() { 
			nav(curPage);
			ipMode('eth0');
			ipMode('wlan0');

			// all items with a title attribute get tooltips :)
			$( document ).tooltip({track: true , opacity: 0.5});

			// refresh click
			$('#refresh').click(function() {
				wifiHide();
			});

			// image navigation clicks
			$('#setupimg1').click(function() {
				curPage = 1;
				nav(curPage);
			});
			$('#setupimg2').click(function() {
				curPage = 2;
				nav(curPage);
			});
			$('#setupimg3').click(function() {
				curPage = 3;
				nav(curPage);
			});
			$('#setupimg4').click(function() {
				curPage = 4;
				nav(curPage);
			});

			$('#setupB1').button().click(function() {
				if (curPage > 1) {
					curPage--;
					nav(curPage)
				}
			});
			$('#setupB2').button().click(function() {
				if (curPage == endPage) {
					// submit form
					$('#setupForm').submit();
				}
				else if (curPage < endPage) {
					curPage++;
					nav(curPage);
				}
			});
			// waiting
			$('#waiting').waiting({ 
				elements: 7,
				auto: true
			});

			// dialog box security (password / username for ap)
			$( "#password_entry" ).dialog( {
				autoOpen: false,
				width: 400,
				buttons: [
					{
						text: "Ok",
						click: function() {
							$('#wlan0_username').val($('#dialog_username').val());
							if ($('#show_password').is(':checked'))
								$('#wlan0_password').val($('#dialog_password_text').val());
							else
								$('#wlan0_password').val($('#dialog_password').val());
							$('#dialog_username').prop('disabled', true);
							$('#dialog_password').prop('disabled', true);
							$('#dialog_password_text').prop('disabled', true);
							$('#show_password').prop('disabled', true);
							$(this).dialog('close');
						}
					},
					{
						text: "Cancel",
						click: function() {
							$( this ).dialog( "close" );
						}
					}
				]
			});

			// dialog box for validation
			$( "#dialog" ).dialog( {
				autoOpen: false,
				width: 400,
				buttons: [
					{
						text: "Ok",
						click: function() {
							$( this ).dialog( "close" );
						}
					},
					{
						text: "Cancel",
						click: function() {
							$( this ).dialog( "close" );
						}
					}
				]
			});
		});

		function validateForm() {
			var invalid_flag = 0;
			var faults_html = "<div class='ui-widget'><div class='ui-state-error ui-corner-all' style='padding: 0 .7em;'>";
			faults_html = faults_html + "<p><span class='ui-icon ui-icon-alert' style='float: left; margin-right: .3em;'></span>";
			faults_html = faults_html +	"<strong>Alert:</strong><ul>";

			$('#dialog').empty();
			if ($('#username').val() == null || $('#username').val() == "")
			{
				invalid_flag = 1;
				faults_html = faults_html + "<li>Must specify a user login.</li>";
			}
			if ($('#password').val() == null || $('#password').val() == "")
			{
				invalid_flag = 1;
				faults_html = faults_html + "<li>Must specify a password.</li>";
			}
			if ($('#hostname').val() == null || $('#hostname').val() == "")
			{
				invalid_flag = 1;
				faults_html = faults_html + "<li>Must specify a hostname.</li>";
			}
			if ($('#email').val() == null || $('#email').val() == "")
			{
				invalid_flag = 1;
				faults_html = faults_html + "<li>Must specify a hostname.</li>";
			}
			if (invalid_flag == 1) {
				faults_html = faults_html + "</ul></p></div></div>";
				$('#dialog').append(faults_html);
				$('#dialog').dialog('open');
				return false;
			}
		}

		function ipMode(iface) {
			if ($("#" + iface + "_mode").val() == 'dynamic') {
				$("#" + iface + "config").hide();
			} else if ($("#" + iface + "_mode").val() == 'static') {
				$("#" + iface + "config").show();
			}
		}

		function nav(page) {
			$('div[id^="setupview"]').hide();
			$('img[id^="setupimg"]').css('opacity', '.33');
			switch (page) {
				case 1:
					$('#setupB1').hide();
					$('#setupB2').val("Next");
					$('#setupview' + page).show();
					$('#setupimg' + page).css('opacity', '1');
					break;
				case 2:
					$('#setupB1').show();
					$('#setupB2').val("Next");
					$('#setupview' + page).show();
					$('#setupimg' + page).css('opacity', '1');
					break;
				case 3:
					$('#setupB1').show();
					$('#setupB2').val("Next");
					$('#setupview' + page).show();
					$('#setupimg' + page).css('opacity', '1');
					if (firstload == 1) {
						wifiHide(); // do fancy socket.io wifi scanning here
						firstload = 0;
					}
					break;
				case 4:
					$('#setupB1').show();
					$('#setupB2').val("Submit");
					$('#setupview' + page).show();
					$('#setupimg' + page).css('opacity', '1');
					break;
			}
			// does magical socket.io stuffs			
		}

		function wifiHide() {
			$("#setupB1").button('disable');
			$("#setupB2").button('disable');
			$("#setupview3").hide();
			$("#setupviewload").show();
			scanio.emit('wifiscan', function () {
				console.info('Sending request for wifi scan.');
			});
		}

		function wifiShow() {
			$("#setupB1").button('enable');
			$("#setupB2").button('enable');
			$("#setupview3").show();
			$("#setupviewload").hide();
		}

		// socketio stuff
		scanio = io.connect();

		scanio.on('scanned', function(scanned_networks) {
			// empty the div so no duplication exists
			$('#wifis').empty();

			$.each(scanned_networks, function(index, wifiobj){
				var security_min = '';
				// check if ssid is null
				if (wifiobj.ssid == "<hidden>")
					return true;

				// determine security type
				else if (wifiobj.encryption.match(/wpa/i))
					security_min = "WPA";
				else if (wifiobj.encryption.match(/wep/i))
					security_min = "WEP";
				else
					security_min = "N/A";

				// build divs for access points
				html = "<div class='selme' id='wdiv" + index + "'>";
				html = html + "<input type='radio' name='wlan0_ssid' value='" + wifiobj.ssid;
				html = html + "' id='wlan0_" + index + "' style='visibility: hidden;'>";
				html = html + "<label class='setupwifi' for='wlan0_" + index + "'>";
				html = html + "<span class='setupwifissid'>" + wifiobj.ssid + "</span>";
				html = html + "<span class='setupwifisec'><img src='/images/locked.png'>&nbsp;" + security_min + "</span>";
				html = html + "<span class='setupwifisig'>Signal&nbsp;";
				if (wifiobj.sig_strength <= 33)
					html = html + "<img src='/images/signal_low.png'>";
				else if (wifiobj.sig_strength > 33 && wifiobj.sig_strength < 66)
					html = html + "<img src='/images/signal_med.png'>";
				else if (wifiobj.sig_strength >= 66)
					html = html + "<img src='/images/signal_high.png'>";
				html = html + "</span></label></div><br>";
				$('#wifis').append(html);
				// set data for use in form submission
				$('#wlan0_' + index).data('bssid', wifiobj.bssid);
				$('#wlan0_' + index).data('security_type', wifiobj.encryption);
			});
			$("label.setupwifi").css('cursor', 'pointer');		// change cursor on hover

			$("input[name='wlan0_ssid']").click( function() {
				$(".selme").removeClass("setupwifisel");
				$(this).parent(".selme").addClass("setupwifisel");
				$('#password_entry').empty();
				$('#password_entry').dialog('option', 'title', 'Credentials for ' + $(this).val());
				dialog_html = "<br>";

				if ($(this).data('security_type').match(/eap/i)) {
					dialog_html = dialog_html + "<label class='setupnet' for='dialog_username'><h4 style='margin: 0px;'>Username</h4></label>";
					dialog_html = dialog_html + "<input class='boxLong dark' type='text' name='dialog_username' id='dialog_username' value=''>";
				}
				dialog_html = dialog_html + "<label class='setupnet' for='dialog_password'><h4 style='margin: 0px;'>Password</h4></label>";
				dialog_html = dialog_html + "<input class='boxLong dark' type='password' name='dialog_password' id='dialog_password'>";
				dialog_html = dialog_html + "<input class='boxLong dark' type='text' name='dialog_password_text' id='dialog_password_text' ";
				dialog_html = dialog_html + "style='display: none;'>";
				dialog_html = dialog_html + "<label class='setupnet' for='show_password' style='display: block; float: right;'>Show ";
				dialog_html = dialog_html + "<input type='checkbox' class='dark' name='show_password' id='show_password' style='position: relative; top: 3px;'></label>";
				$('#password_entry').append(dialog_html);

				// set hidden inputs to selected network
				$('#wlan0_mac').val($(this).data('bssid'));
				$('#wlan0_security').val($(this).data('security_type'));

				// setup on click events for checkbox
				$('#show_password').click(function() {
					if ($('#show_password').is(':checked')) {
						$('#dialog_password_text').val($('#dialog_password').val());
						$('#dialog_password_text').toggle();
						$('#dialog_password').toggle();
					}
					else {
						$('#dialog_password').val($('#dialog_password_text').val());
						$('#dialog_password_text').toggle();
						$('#dialog_password').toggle();
					}
				});

				if ($(this).data('security_type').match(/wpa|wep/i))
					$('#password_entry').dialog('open');
			});
			$('#wifis').append(JSON.stringify(scanned_networks, null, 4));
			// show after appending
			wifiShow();
		});

		scanio.on('error', function (reason) {
			console.error('Unable to connect Socket.IO', reason);
			$('#wifis').empty();
			error_html = "<div class=center><br><br><br><h3>...lost connection...</h3>try to log back in<br><br><br></div>";
			$('#wifis').append(error_html);
			wifiShow();
		});


block content
	form(method='post' id='setupForm' name='setup' action='/setup' onsubmit="return validateForm()")
		div#imagebar.center(style='position: relative; top: -10px;')
			img.clicky(src="/images/security.png" id="setupimg1" title="Login Credentials" style="padding: 3px; margin-left: 13px; margin-right: 13px;")
			img.clicky(src="/images/network.png" id="setupimg2" title="Ethernet Settings" style="padding: 3px; margin-left: 13px; margin-right: 13px;")
			img.clicky(src="/images/router.png" id="setupimg3" title="Select Wireless Access Point" style="padding: 3px; margin-left: 13px; margin-right: 13px;")
			img.clicky(src="/images/wifi.png" id="setupimg4" title="Wifi Settings" style="padding: 3px; margin-left: 13px; margin-right: 13px;")
		div.setupcontent(id='setupview1' style='display: none')

			fieldset
				legend <a>|</a> node details <a>|</a>
				label.setupnet(for='hostname') Hostname
				input.box(type='text', name='hostname', id='hostname', size='12' value='#{hostname}')
				br
				label.setupnet(for='description' style='vertical-align: top;') Description
				textarea(type='text' name='description' id='description')
					| #{description}
			br
			br
			fieldset
				legend <a>|</a> login credentials <a>|</a>
				label.setupnet(for='email') Email
				input.boxLong(type='text', name='email', id='email', size='18' value='#{email}')
				br
				label.setupnet(for='username') Username
				input.box(type='text', name='username', id='username', size='18' value='#{username}')
				br
				label.setupnet(for='password') Password
				input.box(type='password', name='password', id='password', size='18' title='Password should be stronger than the force.')

		div.setupcontent(id='setupview2' style='display: none')
			fieldset
				legend <a>|</a> wired network settings <a>|</a>
				label.setupnet(for='eth0_mode') Mode
				select(name='eth0_mode', id='eth0_mode' onchange="ipMode('eth0')")
					if eth0.mode == "dynamic"
						option(value="dynamic" selected) Dynamic
						option(value="static") Static
					else if eth0.mode == "static"
						option(value="dynamic") Dynamic
						option(value="static" selected) Static
				div#eth0config
					br
					label.setupnet(for='eth0_ip') IP Address
					input.ip(type='text', name='eth0_ip', id='eth0_ip', value='#{eth0.ip}')
					br
					label.setupnet(for='eth0_subnet') Subnet Mask
					input.ip(type='text', name='eth0_subnet', id='eth0_subnet', value='#{eth0.subnet}')
					br
					label.setupnet(for='eth0_gw') Gateway
					input.ip(type='text', name='eth0_gw', id='eth0_gw', value='#{eth0.gw}')
					br
					label.setupnet(for='eth0_dns1') DNS1
					input.ip(type='text', name='eth0_dns1', id='eth0_dns1', value='#{eth0.dns1}')
					br
					label.setupnet(for='eth0_dns2') DNS2
					input.ip(type='text', name='eth0_dns2', id='eth0_dns2', value='#{eth0.dns2}')

		div.setupcontent(id='setupviewload' style='display: none')
			fieldset
				legend <a>|</a> wireless networks in range <a>|</a>
					img.clicky(src='/images/refresh.png' style='margin-left: 9px; padding-top:4px;');
				br
				br
				br
				div#waiting.waitbox
				br
				h3.waitbox Scanning...
				br
				br


		div.setupcontent(id='setupview3' style='display: none')
			fieldset
				legend <a>|</a> wireless networks in range <a>|</a>
					img#refresh.clicky(src='/images/refresh.png' style='margin-left: 9px; padding-top:4px;');
				input(type='hidden' name='wlan0_mac' id='wlan0_mac' value='')
				input(type='hidden' name='wlan0_username' id='wlan0_username' value='')
				input(type='hidden' name='wlan0_password' id='wlan0_password' value='')
				input(type='hidden' name='wlan0_security' id='wlan0_security' value='')
				div#wifis


		div.setupcontent(id='setupview4' style='display: none')
			fieldset
				legend <a>|</a> wireless network settings <a>|</a>
				label.setupnet(for='wlan0_mode') Mode
				select(name='wlan0_mode', id='wlan0_mode' onchange="ipMode('wlan0')")
					if wlan0.mode == "dynamic"
						option(value="dynamic" selected) Dynamic
						option(value="static") Static
					else if wlan0.mode == "static"
						option(value="dynamic") Dynamic
						option(value="static" selected) Static
				div#wlan0config
					br
					label.setupnet(for='wlan0_ip') IP Address
					input.ip(type='text', name='wlan0_ip', id='wlan0_ip', value='#{wlan0.ip}')
					br
					label.setupnet(for='wlan0_subnet') Subnet Mask
					input.ip(type='text', name='wlan0_subnet', id='wlan0_subnet', value='#{wlan0.subnet}')
					br
					label.setupnet(for='wlan0_gw') Gateway
					input.ip(type='text', name='wlan0_gw', id='wlan0_gw', value='#{wlan0.gw}')
					br
					label.setupnet(for='wlan0_dns1') DNS1
					input.ip(type='text', name='wlan0_dns1', id='wlan0_dns1', value='#{wlan0.dns1}')
					br
					label.setupnet(for='wlan0_dns2') DNS2
					input.ip(type='text', name='wlan0_dns2', id='wlan0_dns2', value='#{wlan0.dns2}')

					<!-- ui-dialog -->
					div#dialog(title="Invalid Setup Configuration")
					div#password_entry(title="Password Information")
					<!-- end ui-dialog -->

		div.center
			input(id="setupB1" type="button" value="Previous")
			input(id="setupB2" type="button" value="Next ")
