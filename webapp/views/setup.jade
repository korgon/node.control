extends layout_minimal

block jscripts
	script(src="/javascripts/jquery-waiting.js")
	script(src="/socket.io/socket.io.js")
	script(src="/javascripts/jquery-ui-1.10.3.js")
	script.
		var curPage = 1, endPage = 4;

		// do stuff once document loads
		$(document).ready(function(){ 
			nav(curPage);
			ipMode('eth0');
			ipMode('wlan0');

			// all items with a title attribute get tooltips :)
			$( document ).tooltip({track: true , opacity: 0.5});

			// image navigation clicks
			$('#setupimg1').click(function() {
				curPage = 1;
				nav(curPage);
			});
			$('#setupimg2').click(function() {
				curPage = 2;
				nav(curPage);
			});
			$('#setupimg3').click(function() {
				curPage = 3;
				nav(curPage);
			});
			$('#setupimg4').click(function() {
				curPage = 4;
				nav(curPage);
			});

			$('#setupB1').button().click(function() {
				if (curPage > 1) {
					curPage--;
					nav(curPage)
				}
			});
			$('#setupB2').button().click(function() {
				if (curPage == endPage) {
					// submit form
					$('#setupForm').submit();
				}
				else if (curPage < endPage) {
					curPage++;
					nav(curPage);
				}
			});
			// waiting
			$('#waiting').waiting({ 
				elements: 7,
				auto: true
			});
		});

		function validateForm() {
			var x = document.forms["setup"]["password"].value;
			if (x == null || x == "")
			{
				alert("C'mon no password?");
				return false;
			}
		}

		function ipMode(iface) {
			if ($("#" + iface + "_mode").val() == 'dynamic') {
				$("#" + iface + "config").hide();
			} else if ($("#" + iface + "_mode").val() == 'static') {
				$("#" + iface + "config").show();
			}
		}

		function wifiselect(id, wificnt) {
			var ids = [];
	
			for (var i=0; i < wificnt; i++) {
				if (id == 'w'+i) {
					ids[i] = document.getElementById('w' + i);
					ids[i].classList.add('setupwifisel');
				} else {
					ids[i] = document.getElementById('w' + i);
					ids[i].classList.remove('setupwifisel');			
				}
			}
		}

		function nav(page) {
			switch (page) {
				case 1:
					$('#setupB1').hide();
					$('#setupB2').val(" Next ");
					for (i=1; i<=endPage; i++) {
						if (i==page) {
							$('#setup' + i).show();
							$('#setupimg' + i).css('opacity', '.5');
						}	else {
							$('#setup' + i).hide();
							$('#setupimg' + i).css('opacity', '1');
						}
					}
					break;
				case 2:
					$('#setupB1').show();
					$('#setupB2').val(" Next ");
					for (i=1; i<=endPage; i++) {
						if (i==page) {
							$('#setup' + i).show();
							$('#setupimg' + i).css('opacity', '.5');
						}	else {
							$('#setup' + i).hide();
							$('#setupimg' + i).css('opacity', '1');
						}
					}
					break;
				case 3:
					$('#setupB1').show();
					$('#setupB2').val(" Next ");
					for (i=1; i<=endPage; i++) {
						if (i==page) {
							$('#setup' + i).show();
							$('#setupimg' + i).css('opacity', '.5');
							wifiHide(); // do fancy socket.io wifi scanning here
						}	else {
							$('#setup' + i).hide();
							$('#setupimg' + i).css('opacity', '1');
						}
					}
					break;
				case 4:
					$('#setupB1').show();
					$('#setupB2').val("Submit");
					for (i=1; i<=endPage; i++) {
						if (i==page) {
							$('#setup' + i).show();
							$('#setupimg' + i).css('opacity', '.5');
						}	else {
							$('#setup' + i).hide();
							$('#setupimg' + i).css('opacity', '1');
						}
					}
					break;
			}
			// does magical socket.io stuffs			
		}

		function wifiHide() {
			$("#setupB1").button('disable');
			$("#setupB2").button('disable');
			$("#imagebar").hide();
			$("#setup3").hide();
			$("#load").show();
			scanio.emit('wifiscan', function () {
				console.info('Sending request for wifi scan.');
			});
		}

		function wifiShow() {
			$("#setupB1").button('enable');
			$("#setupB2").button('enable');
			$("#imagebar").show();
			$("#setup3").show();
			$("#load").hide();
		}

		// socketio stuff
		scanio = io.connect();

		scanio.on('scanned', function(data) {
			// empty the div so no duplication exists
			$('#wifis').empty();
			$('#wifis').append(JSON.stringify(data, null, 4));
			// show after appending
			wifiShow();
		});

		scanio.on('error', function (reason) {
			console.error('Unable to connect Socket.IO', reason);
		});

block content
	div.setupspacer

	form(method='post' id='setupForm' name='setup' action='/setup' onsubmit="return validateForm()")
		div.subcontent(id='setup1' style='display: none')
			fieldset
				legend <a>[ node details ]</a>
				label.setupnet(for='hostname') Hostname
				input.box(type='text', name='hostname', id='hostname', size='12' value='#{hostname}')
				br
				label.setupnet(for='description' style='vertical-align: top;') Description
				textarea(type='text' name='description' id='description')
					| #{description}
			br
			br
			fieldset
				legend <a>[ login credentials ]</a>
				label.setupnet(for='email') Email
				input.boxLong(type='text', name='email', id='email', size='18' value='#{email}')
				br
				label.setupnet(for='username') Username
				input.box(type='text', name='username', id='username', size='18' value='#{username}')
				br
				label.setupnet(for='password') Password
				input.box(type='password', name='password', id='password', size='18' title='Password should be stronger than the force.')

		div.subcontent(id='setup2' style='display: none')
			fieldset
				legend <a>[ wired network settings ]</a>
				label.setupnet(for='eth0_mode') Mode
				select(name='eth0_mode', id='eth0_mode' onchange="ipMode('eth0')")
					if eth0.mode == "dynamic"
						option(value="dynamic" selected) Dynamic
						option(value="static") Static
					else if eth0.mode == "static"
						option(value="dynamic") Dynamic
						option(value="static" selected) Static
				div#eth0config
					br
					label.setupnet(for='eth0_ip') IP Address
					input.ip(type='text', name='eth0_ip', id='eth0_ip', value='#{eth0.ip}')
					br
					label.setupnet(for='eth0_subnet') Subnet Mask
					input.ip(type='text', name='eth0_subnet', id='eth0_subnet', value='#{eth0.subnet}')
					br
					label.setupnet(for='eth0_gw') Gateway
					input.ip(type='text', name='eth0_gw', id='eth0_gw', value='#{eth0.gw}')
					br
					label.setupnet(for='eth0_dns1') DNS1
					input.ip(type='text', name='eth0_dns1', id='eth0_dns1', value='#{eth0.dns1}')
					br
					label.setupnet(for='eth0_dns2') DNS2
					input.ip(type='text', name='eth0_dns2', id='eth0_dns2', value='#{eth0.dns2}')

		div.subcontent(id='load' style='display: none')
			fieldset
				legend <a>[ wireless networks in range ]</a>
				br
				br
				br
				div#waiting.waitbox
				br
				h3.waitbox Scanning...
				br
				br


		div.subcontent(id='setup3' style='display: none')
			fieldset
				legend <a>[ wireless networks in range ]</a>
				div#wifis


		div.subcontent(id='setup4' style='display: none')
			fieldset
				legend <a>[ wireless network settings ]</a>
				label.setupnet(for='wlan0_mode') Mode
				select(name='wlan0_mode', id='wlan0_mode' onchange="ipMode('wlan0')")
					if wlan0.mode == "dynamic"
						option(value="dynamic" selected) Dynamic
						option(value="static") Static
					else if wlan0.mode == "static"
						option(value="dynamic") Dynamic
						option(value="static" selected) Static
				div#wlan0config
					br
					label.setupnet(for='wlan0_ip') IP Address
					input.ip(type='text', name='wlan0_ip', id='wlan0_ip', value='#{wlan0.ip}')
					br
					label.setupnet(for='wlan0_subnet') Subnet Mask
					input.ip(type='text', name='wlan0_subnet', id='wlan0_subnet', value='#{wlan0.subnet}')
					br
					label.setupnet(for='wlan0_gw') Gateway
					input.ip(type='text', name='wlan0_gw', id='wlan0_gw', value='#{wlan0.gw}')
					br
					label.setupnet(for='wlan0_dns1') DNS1
					input.ip(type='text', name='wlan0_dns1', id='wlan0_dns1', value='#{wlan0.dns1}')
					br
					label.setupnet(for='wlan0_dns2') DNS2
					input.ip(type='text', name='wlan0_dns2', id='wlan0_dns2', value='#{wlan0.dns2}')

		div.center
			input(id="setupB1" type="button" value="Previous")
			input(id="setupB2" type="button" value=" Next ")
		div#imagebar.center
			br
			img.clicky(src="/images/security.png" id="setupimg1" title="Login Credentials" style="padding: 3px")
			img(src="/images/dash.png" style="padding: 10px")
			img.clicky(src="/images/network.png" id="setupimg2" title="Ethernet Settings" style="padding: 3px")
			img(src="/images/dash.png" style="padding: 10px")
			img.clicky(src="/images/router.png" id="setupimg3" title="Select Wireless Access Point" style="padding: 3px")
			img(src="/images/dash.png" style="padding: 10px")
			img.clicky(src="/images/wifi.png" id="setupimg4" title="Wifi Settings" style="padding: 3px")
